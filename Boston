import requests

def get_boston_forecast(latitude, longitude):
    """Fetches and displays the forecast from the NWS API."""

    base_url = "https://api.weather.gov/points/"
    points_url = f"{base_url}{latitude},{longitude}"

    headers = {'User-Agent': 'BostonWeatherDashboard/1.0 (your_email@example.com)'}

    try:
        # Get the forecast URL from the points endpoint.
        points_response = requests.get(points_url, headers=headers)
        points_response.raise_for_status()
        points_data = points_response.json()
        forecast_url = points_data["properties"]["forecast"]

        # Get the forecast data.
        forecast_response = requests.get(forecast_url, headers=headers)
        forecast_response.raise_for_status()
        forecast_data = forecast_response.json()

        # Print the forecast.
        print("Boston Weather Forecast:")
        for period in forecast_data["properties"]["periods"]:
            print(f"  {period['name']}: {period['shortForecast']}, "
                  f"Temperature: {period.get('temperature', 'N/A')}Â°{period.get('temperatureUnit', '')}")

    except requests.exceptions.RequestException as e:
        print(f"Error fetching forecast data: {e}")

def get_boston_alerts(latitude, longitude):
    """Fetches and displays weather alerts from the NWS API."""

    alerts_url = f"https://api.weather.gov/alerts/active?point={longitude},{latitude}"

    headers = {'User-Agent': 'BostonWeatherDashboard/1.0 (your_email@example.com)'}

    try:
        alerts_response = requests.get(alerts_url, headers=headers)
        alerts_response.raise_for_status()
        alerts_data = alerts_response.json()

        if alerts_data["features"]:
            print("\nWeather Alerts:")
            for alert in alerts_data["features"]:
                print(f"  {alert['properties']['headline']}: {alert['properties']['description']}")
        else:
            print("\nNo active weather alerts.")

    except requests.exceptions.RequestException as e:
        print(f"Error fetching alert data: {e}")

# Boston coordinates
latitude = 42.3601
longitude = -71.0589

get_boston_forecast(latitude, longitude)
